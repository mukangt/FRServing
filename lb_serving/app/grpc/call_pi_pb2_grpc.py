# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import app.grpc.call_pi_pb2 as call__pi__pb2


class PiServiceStub(object):
    """Missing associated documentation comment in .proto file."""
    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendData = channel.unary_unary(
            '/grpc.PiService/SendData',
            request_serializer=call__pi__pb2.PiRequest.SerializeToString,
            response_deserializer=call__pi__pb2.PiReply.FromString,
        )


class PiServiceServicer(object):
    """Missing associated documentation comment in .proto file."""
    def SendData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PiServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'SendData':
        grpc.unary_unary_rpc_method_handler(
            servicer.SendData,
            request_deserializer=call__pi__pb2.PiRequest.FromString,
            response_serializer=call__pi__pb2.PiReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'grpc.PiService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler, ))


# This class is part of an EXPERIMENTAL API.
class PiService(object):
    """Missing associated documentation comment in .proto file."""
    @staticmethod
    def SendData(request,
                 target,
                 options=(),
                 channel_credentials=None,
                 call_credentials=None,
                 insecure=False,
                 compression=None,
                 wait_for_ready=None,
                 timeout=None,
                 metadata=None):
        return grpc.experimental.unary_unary(
            request, target, '/grpc.PiService/SendData',
            call__pi__pb2.PiRequest.SerializeToString,
            call__pi__pb2.PiReply.FromString, options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout,
            metadata)
